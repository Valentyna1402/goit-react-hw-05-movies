{"version":3,"file":"static/js/206.898a4359.chunk.js","mappings":"iNAEMA,EAAOC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yCAIhBC,EAAOH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,2d,SCFTG,EAAa,SAAHC,GAAmB,IAAbC,EAAKD,EAALC,MACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,KAACX,EAAI,CAAAY,SACFJ,EAAMK,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAKF,EAALE,MAAK,OACrBL,EAAAA,EAAAA,KAACP,EAAI,CAAAQ,UACHD,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaJ,GAAMK,MAAO,CAAEC,KAAMZ,GAAYa,UAAU,YAAWV,SACxEI,KAFMD,EAIJ,KAIf,C,gKCXe,SAASQ,IACtB,IAAAC,GAAkCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,GAA8BL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA0BT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAlCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAiBtB,OAfAG,EAAAA,EAAAA,YAAU,WACmB,SAAAC,IAU1B,OAV0BA,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAA3B,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEoB,OAFpBF,EAAAC,KAAA,EAEIR,GAAS,GAAOO,EAAAE,KAAA,GACQC,EAAAA,EAAAA,MAAmB,KAAD,EAApCnB,EAASgB,EAAAI,KACfnB,EAAaD,GAAWgB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAExBP,GAAS,GAAM,QAEG,OAFHO,EAAAC,KAAA,GAEfZ,GAAW,GAAOW,EAAAM,OAAA,6BAAAN,EAAAO,OAAA,GAAAT,EAAA,yBAErBU,MAAA,KAAAC,UAAA,EAXc,WACYd,EAAAa,MAAC,KAADC,UAAA,CAW3BC,EACF,GAAG,KAGDC,EAAAA,EAAAA,MAAA,OAAA3C,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAI,mBACHoB,IAAWrB,EAAAA,EAAAA,KAAC6C,EAAAA,EAAM,IAClBpB,IAASzB,EAAAA,EAAAA,KAAC8C,EAAAA,EAAK,IACf7B,EAAU8B,OAAS,IAAK/C,EAAAA,EAAAA,KAACL,EAAAA,EAAU,CAACE,MAAOoB,MAGlD,C","sources":["components/MoviesList/MovieList.styled.js","components/MoviesList/MoviesList.js","pages/HomePage.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst List = styled.ol`\n  counter-reset: orderedlist;\n`;\n\nconst Item = styled.li`\n  & {\n    font-size: 16px;\n    margin-bottom: 10px;\n  }\n  &:before {\n    counter-increment: orderedlist;\n    content: counter(orderedlist);\n    font-family: 'Indie Flower';\n    display: inline-block;\n    font-size: 10px;\n    line-height: 0.75;\n    width: 25px;\n    height: 15px;\n    padding-top: 10px;\n    margin-right: 10px;\n    text-align: center;\n    color: #fff;\n    background-color: rgba(148, 136, 255, 0.815);\n    border-radius: 5px;\n  }\n`;\n\nexport { List, Item };\n","import { Link, useLocation } from 'react-router-dom';\n\nimport { List, Item } from './MovieList.styled';\n\nexport const MoviesList = ({ items }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {items.map(({ id, title }) => (\n        <Item key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }} className='item-link'>\n            {title}\n          </Link>\n        </Item>\n      ))}\n    </List>\n  );\n};\n","import { useEffect, useState } from 'react';\n\nimport { fetchTrendMovies } from '../components/API';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport Loader from 'components/Loader';\nimport Error from 'components/Error/Error';\n\nexport default function HomePage() {\n  const [topMovies, setTopMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    async function getTopMovies() {\n      try {\n        setError(false);\n        const topMovies = await fetchTrendMovies();\n        setTopMovies(topMovies);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoading(false);\n      }\n    }\n    getTopMovies();\n  }, []);\n\n  return (\n    <div>\n      <h1>Trending today</h1>\n      {loading && <Loader />}\n      {error && <Error />}\n      {topMovies.length > 0 && <MoviesList items={topMovies} />}\n    </div>\n  );\n}\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","MoviesList","_ref","items","location","useLocation","_jsx","children","map","_ref2","id","title","Link","to","concat","state","from","className","HomePage","_useState","useState","_useState2","_slicedToArray","topMovies","setTopMovies","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","useEffect","_getTopMovies","_asyncToGenerator","_regeneratorRuntime","_callee","_topMovies","_context","prev","next","fetchTrendMovies","sent","t0","finish","stop","apply","arguments","getTopMovies","_jsxs","Loader","Error","length"],"sourceRoot":""}